angular.module('requireUserBug').run [
  '$rootScope'
  '$location'
  ($rootScope, $location) ->
    $rootScope.$on '$stateChangeError', (event, next, previous, error) ->
# We can catch the error thrown when the $requireUser promise is rejected
# and redirect the user back to the main page
      if error == 'AUTH_REQUIRED'
        $location.path '/allow-all'
      return
    return
]


currentUserCheck = ['$q', '$timeout', '$http', '$state', '$rootScope', '$log', ($q, $timeout, $http, $state, $rootScope, $log) ->
  $log.log $rootScope.currentUser
]


justRestrict = ['$q', ($q) ->

  $q.reject()

]



angular.module('requireUserBug').config [
  '$urlRouterProvider'
  '$stateProvider'
  '$locationProvider'
  ($urlRouterProvider, $stateProvider, $locationProvider) ->
    $locationProvider.html5Mode true
    $stateProvider.state('allowAll',
      url: '/allow-all'
      templateUrl: 'client/views/allow-all.ng.html'
      controller: 'MainCtrl'
    ).state('restrict',
      url: '/restrict'
      templateUrl: 'client/views/restrict.ng.html'
      controller: 'MainCtrl'
      resolve: 'currentUser': [
        '$meteor'
        ($meteor) ->
          $meteor.requireUser()
      ]
    ).state('check',
      url: '/check'
      templateUrl: 'client/views/check.ng.html'
      controller: 'MainCtrl'
      resolve: {
        check: currentUserCheck
      }
    ).state('check-without-meteor',
      url: '/check-without-meteor'
      templateUrl: 'client/views/check-without-meteor.ng.html'
      controller: 'MainCtrl'
      resolve: {
        check: justRestrict
      }
    )

    $urlRouterProvider.otherwise '/allow-all'
    return
]

# ---
# generated by js2coffee 2.0.3